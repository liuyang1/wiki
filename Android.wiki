= Android =

* [[bionic]]
* [[media_framework]]
* [[arm_hardware]]
* [[Binder]]

== Android based on Linux ==
=== ion ===
ion use IDR lib.

== NDK ==

since Android 5.0 version, only support PIE. (check [[gcc]] to find more
        details)

so need `-fPIE -pie`, when try to compile for android platform.

ref: https://stackoverflow.com/questions/24818902/running-a-native-library-on-android-l-error-only-position-independent-executab

== tools ==
=== am ===
start apk in command line
- start -n [APK_name]

=== pm ===
- list
    - packages      list installed packages
    - features
    - users
    - libraries
- uninstall

=== adb ===
* select device

- connect
- disconnect
- devices
adb -s [DeviceID] ...

- install
    - -r            reinstall
- uninstall
    - -k            keep data and cache
- remount           remount /system, /vendor
- reboot            reboot
- shell
- logcat

- push
    when push directory, it will push all file under that directory to board
- pull

=== logcat ===
- -r                rotate log, default to 16KB
    This is so helpful when debug long term problem. Unbeliveable nonbody find
        this before
- -n                roated log files, default to 4
- -g                buffer size
    When logcat to terminal, increase this value to avoid "unexpected error"
=== mksh ===
MirBSD Korn Shell

In mksh, arithematic default have signed bit, so it works like this style.

```
printf "%#X" $((0xffff0000 + 0x4))
0xFFFFFFFFFFFF0004
```

we have to use `dc` in `busybox` to get normal result:
```
printf "%#X" `busybox dc 0xffff000 0x4 add p`
0xFFFF0004
```
=== screencap ===
capture screen(GFX plane)

- -p        png
- -d        dispaly id to capture, default 0
=== screenrecord ===
record device's display to a .MP4 file.

screenrecord [output filename]

- --size WIDTHxHEIGHT (default devices display resolution or 1280x720)
- --bit-rate RATE (default 4M bps)
- time-limit TIME (default/max is 180)

use H.264 AVC encoder

=== selinux ===
- How to disable it
`setenfoce 0`
- How to disable it permanently

`$(ANDORID)/system/core/init.c` find `selinux_is_disabled` function.

Directly `return true;` in header of this function.

=== DDMS ===
==== issue ====
- device offline
reconfigure MAC Addr, and re-dhcp, then retry.

If misspell IP addr, or not align version of adb between server and client,
   may get this problem.

- cannot copy
adb -s [DevicesID] root

- read-only filesystem
adb -s [DevicesID] remount

or check `df` or `mount` first

==== no permission ====
```
chown root:[user_group] adb
chmod 4550 adb
```

correct solution need this:
https://stackoverflow.com/questions/14460656/android-debug-bridge-adb-device-no-permissions/19291975#19291975

=== android ===
NOTE:
this is development tool, not other things.

development tool
- create, delete, view Android Virtual Devices(*AVD* s)
- create, update Android projects
- update Android SDK with new platforms, add-ons, and documents.

=== systrace ===
==== flow ====
capturing data
- check exist of `sys/kernel/debug/tracing`, then
{{{
echo 32768 /sys/kernel/debug/tracing/per/cpu/cpu*/buffer_size_kb
echo 1 > sys/kernel/debug/tracing/tracing_on
}}}
to enable tracing mode.
- Android kernel such as CPU scheduler (from `/proc/cpuinfo`), kernal and disk
activity
- application threads

then write log to HTML template, to get result display.

==== enable tracing ====
- connected through USB, and _enable USB for debugging_.
- linux kernel need support _TRACE_ mode.

Command Line::
start / stop command

GUI::
Settings > Developer Options > Monitoring > Enable traces

select categories of processes to be traced and click OK.

=== netcfg ===
- ifconfig [networkname]

such as: tiwlan0, eth0, lo

* netcfg [<interface> {dhcp|up|down}]

- ip addr

== studio ==
=== fetch fail ===
add this line to idea.properties

`disable.android.first.run=true`

== AOSP ==
Andorid Open-Source Project

= develop tool =
== repo ==
snapshort::

save a snapshot of the source tree

`repo manifest -o snapshot.xml -r`

restore tree to the state described in a manifest snapshot file.
{{{
cp snapshot.xml .repo/manifest/
repo init -m snapshot.xml
repo sync -d
}}}

= build =

- source, lunch, make
- m audio.primary.[$soc]
- mm in specific directory
- mmm

Android.mk --- Kati --> ninja
Android.bp --- blueprint+soong --> ninja

https://www.cxyzjd.com/article/yiranfeng/109082489

== bootstap_go_package ==
soong build plugin

Due to blueprint doesn't have branch/logic-control, it use `bootstrap_go_package` to control build

pluginFor: ["soong_build"], use this package for soong plugin

cc_binary -> cc.DefaultsFactory
cc_library_shared -> cc.LibrarySharedFactory
java_library -> java.LibraryFactory

具体参考这里：https://blog.csdn.net/zhzhangnews/article/details/105634037

PRODUCT_COPY_FILES
